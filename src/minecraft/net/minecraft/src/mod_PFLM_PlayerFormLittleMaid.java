package net.minecraft.src;import java.util.EnumSet;import java.util.Map;import modchu.lib.Modchu_Debug;import modchu.lib.Modchu_Reflect;import modchu.pflm.PFLM_Main;import net.minecraft.client.Minecraft;import net.minecraft.client.gui.GuiScreen;import net.minecraft.client.multiplayer.NetClientHandler;import net.minecraft.client.settings.KeyBinding;import cpw.mods.fml.common.ITickHandler;import cpw.mods.fml.common.Mod;import cpw.mods.fml.common.Mod.EventHandler;import cpw.mods.fml.common.TickType;import cpw.mods.fml.common.event.FMLInitializationEvent;import cpw.mods.fml.common.event.FMLPreInitializationEvent;import cpw.mods.fml.common.registry.TickRegistry;import cpw.mods.fml.relauncher.Side;@Mod(modid="mod_PFLM_PlayerFormLittleMaid", name="mod_PFLM_PlayerFormLittleMaid")public class mod_PFLM_PlayerFormLittleMaid implements ITickHandler {	static {		//boolean b = cpw.mods.fml.common.FMLCommonHandler.instance().getSide().PFLM_Main.isServer();		//Modchu_Debug.Debug("static b="+b);		Object o = Modchu_Reflect.invokeMethod("cpw.mods.fml.common.FMLCommonHandler", "instance");		if (o != null) {			o = Modchu_Reflect.invokeMethod(o.getClass(), "getSide", o);			if (o != null) {				if ((Boolean) Modchu_Reflect.invokeMethod(o.getClass(), "isServer", o)) PFLM_Main.isServer = true;			} else {				//Modchu_Debug.Debug("static 2 o == null !!");			}		} else {			PFLM_Main.isServer = Modchu_Reflect.getFieldObject("ModLoader", "getMinecraftInstance") != null;			//Modchu_Debug.Debug("static o == null !!");		}		//Modchu_Debug.Debug("static isServer="+isServer);	}	public mod_PFLM_PlayerFormLittleMaid()	{		PFLM_Main.mod_pflm_playerformlittlemaid = this;		// b181deleteload();	}	public String getName() {		return PFLM_Main.modName;	}	public String getVersion() {		return PFLM_Main.versionString;	}	@EventHandler	public void preInit(FMLPreInitializationEvent event) {		Modchu_Debug.systemDebug("mod_PFLM_PlayerFormLittleMaid preInit", 3);		if (PFLM_Main.isServer) {			Modchu_Debug.systemDebug("mod_PFLM_PlayerFormLittleMaid preInit isServer return.", 999);			return;		}		PFLM_Main pflm_main = new PFLM_Main();		pflm_main.load();		if (!PFLM_Main.isServer) {			TickRegistry.registerTickHandler(this, Side.CLIENT);		} else {			TickRegistry.registerTickHandler(this, Side.SERVER);		}		//ModLoaderHelper.updateStandardTicks(this, true, true);	}	public void loadInit() {		PFLM_Main.loadInit();	}	@EventHandler	public void init(FMLInitializationEvent event) {		Modchu_Debug.lDebug("mod_PFLM_PlayerFormLittleMaid init");		if (PFLM_Main.isServer) return;		PFLM_Main.modsLoaded();	}	public void modsLoadedInit() {		PFLM_Main.modsLoadedInit();		//ModLoaderHelper.updateGUITicks(this, true, true);	}	public void addRenderer(Map map)	{		PFLM_Main.addRenderer(map);	}	public void keyboardEvent(KeyBinding keybinding) {		PFLM_Main.keyboardEvent(keybinding);	}	public boolean onTickInGUI(float f, Minecraft minecraft, GuiScreen par1GuiScreen) {		return onTickInGUI(f, minecraft, par1GuiScreen, (Object)null);	}	public boolean onTickInGUI(float f, Minecraft minecraft, GuiScreen par1GuiScreen, Object... tickData) {		return PFLM_Main.onTickInGUI(f, minecraft, par1GuiScreen, tickData);	}	public boolean onTickInGame(float f, Minecraft minecraft) {		return PFLM_Main.onTickInGame(f, minecraft, (Object)null);	}	public boolean onTickInGame(float f, Minecraft minecraft, Object... tickData) {		return PFLM_Main.onTickInGame(f, minecraft, tickData);	}	public void serverConnect(NetClientHandler netClientHandler) {		clientConnect(netClientHandler);		return;	}	public void clientConnect(NetClientHandler netClientHandler) {		PFLM_Main.clientConnect(netClientHandler);	}	@Override	public void tickStart(EnumSet<TickType> type, Object... tickData) {		if (PFLM_Main.isServer) return;		onTickInGame(0.0F, null);	}	@Override	public void tickEnd(EnumSet<TickType> type, Object... tickData) {	}	@Override	public EnumSet<TickType> ticks() {		return EnumSet.of(TickType.PLAYER, TickType.CLIENT);	}	@Override	public String getLabel() {		return "PFLM";	}	public void load() {		preInit(null);	}	public void modsLoaded() {		init(null);	}	public String getPriorities() {		return null;	}/*	@Override	public boolean doTickInGUI(TickType type, boolean end, Object... tickData) {		return onTickInGUI(1.0F, null, null, tickData);	}	@Override	public boolean doTickInGame(TickType type, boolean end, Object... tickData) {		return onTickInGame(1.0F, null, tickData);	}	@Override	public void generateSurface(World w, Random random, int i, int j) {	}	@Override	public void generateNether(World w, Random random, int i, int j) {	}	@Override	public int addFuel(int itemId, int damage) {		return 0;	}	@Override	public void takenFromCrafting(EntityPlayer player, ItemStack item, IInventory craftMatrix) {	}	@Override	public void takenFromFurnace(EntityPlayer player, ItemStack item) {	}	@Override	public void onClientLogout(INetworkManager manager) {	}	@Override	public void onClientLogin(EntityPlayer player) {	}	@Override	public void serverDisconnect() {	}	@Override	public void serverConnect(NetHandler handler) {	}	@Override	public void receiveCustomPacket(Packet250CustomPayload packet) {	}	@Override	public void clientChat(String text) {	}	@Override	public void onItemPickup(EntityPlayer player, ItemStack item) {	}	@Override	public void serverCustomPayload(NetServerHandler handler, Packet250CustomPayload packet) {	}	@Override	public void serverChat(NetServerHandler source, String message) {	}*/}