package modchu.pflm;import modchu.lib.Modchu_Main;import modchu.lib.Modchu_Reflect;import net.minecraft.client.gui.FontRenderer;import net.minecraft.client.gui.GuiScreen;import net.minecraft.entity.EntityLiving;import net.minecraft.world.World;public abstract class PFLM_GuiBase extends GuiScreen {	protected World popWorld;	protected EntityLiving drawEntity;	public boolean guiMode;	public PFLM_GuiBase parentScreen;	public PFLM_GuiBase(PFLM_GuiBase par1GuiScreen, World world) {		popWorld = world;		parentScreen = par1GuiScreen;		guiMode = true;		initDrawEntity();		fontRenderer = (FontRenderer) Modchu_Reflect.getFieldObject("Minecraft", "field_71466_p", "fontRenderer", Modchu_Main.getMinecraft());	}	protected void initDrawEntity() {		if (drawEntity != null) ;else drawEntity = (EntityLiving) Modchu_Reflect.newInstance("PFLM_EntityPlayerDummy", new Class[]{ World.class }, new Object[]{ popWorld });		PFLM_ModelData modelData = (PFLM_ModelData) PFLM_ModelDataMaster.instance.getPlayerData(drawEntity);		modelData.setRender(PFLM_Main.pflm_RenderPlayerDummy);		modelData.setCapsValue(modelData.caps_freeVariable, "showMainModel", true);		modelData.setCapsValue(modelData.caps_freeVariable, "initDrawEntityFlag", true);	}	public void updateScreen() {		PFLM_ModelData modelData = (PFLM_ModelData) PFLM_ModelDataMaster.instance.getPlayerData(drawEntity);		if (!modelData.getCapsValueBoolean(modelData.caps_freeVariable, "initDrawEntityFlag")) initDrawEntity();		try {			Thread.sleep(10L);		} catch (InterruptedException e) {		}	}	@Override	public void drawScreen(int i, int j, float f) {		drawDefaultBackground();		super.drawScreen(i, j, f);		drawGuiContainerBackgroundLayer(f, i, j);	}	public void superDrawScreen(int i, int j, float f) {		super.drawScreen(i, j, f);	}	@Override	public void onGuiClosed() {		memoryRelease();		guiMode = false;	}	@Override	public boolean doesGuiPauseGame() {		return !PFLM_Main.isMulti;	}	public abstract void memoryRelease();	protected abstract void drawGuiContainerBackgroundLayer(float f, int i, int j);}