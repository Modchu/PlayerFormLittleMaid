package modchu.pflm;import modchu.lib.Modchu_Main;import modchu.lib.Modchu_Reflect;import net.minecraft.client.gui.GuiScreen;import net.minecraft.client.renderer.Tessellator;import net.minecraft.world.World;public class PFLM_GuiOthersPlayerSlotMaster extends PFLM_GuiModelSelectBase {	public PFLM_GuiOthersPlayerIndividualCustomizeSelect ownerGui;	private int selected;	private int mouseX;	private int mouseY;	public PFLM_GuiOthersPlayerSlotMaster(Object par1Minecraft,			int par2, int par3, int par4, int par5, int par6) {		this((PFLM_GuiBase)null, (World)null);	}	public PFLM_GuiOthersPlayerSlotMaster(PFLM_GuiBase par1GuiScreen, World world) {		super(par1GuiScreen, world);		popWorld = world;		ownerGui = (PFLM_GuiOthersPlayerIndividualCustomizeSelect) par1GuiScreen;		selected = 0;		PFLM_ModelData modelData = (PFLM_ModelData) PFLM_ModelDataMaster.instance.getPlayerData(drawEntity);		modelData.setCapsValue(modelData.caps_freeVariable, "showArmor", false);	}	public void selected(String textureName, String textureArmorName, int color, boolean armorMode) {		super.selected(textureName, textureArmorName, color, armorMode);		PFLM_ModelData modelData = (PFLM_ModelData) PFLM_ModelDataMaster.instance.getPlayerData(drawEntity);		modelData.setCapsValue(modelData.caps_freeVariable, "showArmor", false);		modelData.setCapsValue(modelData.caps_freeVariable, "showMainModel", true);	}	protected int getSize() {		return PFLM_GuiOthersPlayerIndividualCustomizeSelect.playerList.size();	}	protected int getContentHeight()	{		return getSize() * 36;	}	protected void elementClicked(int i, boolean flag) {		//flag = true 左ダブルクリック		selected = i;		String s = PFLM_GuiOthersPlayerIndividualCustomizeSelect.playerList.get(i);		if (flag) openGuiCustomize();	}	public void openGuiCustomize() {		if (PFLM_GuiOthersPlayerIndividualCustomizeSelect.playerList.size() < 1) return;		String s = PFLM_GuiOthersPlayerIndividualCustomizeSelect.playerList.get(selected);		PFLM_GuiOthersPlayerIndividualCustomize gui = new PFLM_GuiOthersPlayerIndividualCustomize(ownerGui, popWorld, s);		Modchu_Reflect.invokeMethod("Minecraft", "func_71373_a", "displayGuiScreen", new Class[]{ GuiScreen.class }, Modchu_Main.getMinecraft(), new Object[]{ gui });		//mc.displayGuiScreen(gui);		gui.setChangeMode(PFLM_GuiOthersPlayerIndividualCustomize.modeOthersSettingOffline);		String t[] = (String[]) PFLM_Main.playerLocalData.get(s);		if (t != null) {			gui.setTextureName(t[0]);			gui.setTextureArmorName(t[1]);			gui.setColor(Integer.valueOf(t[2]));			gui.setScale(Float.valueOf(t[3]));			gui.setChangeMode(Integer.valueOf(t[4]));		}		gui.initGui();		PFLM_Main.pflm_RenderPlayerDummy.allModelInit(drawEntity, false);	}	protected boolean isSelected(int i) {		if (PFLM_GuiOthersPlayerIndividualCustomizeSelect.playerList.size() > i && i == selected) {			return true;		}		return false;	}	protected void drawBackground() {	}	public void drawScreen(int i, int j, float f)	{		mouseX = i;		mouseY = j;	}	protected void drawSlot(int i, int j, int k, int l, Tessellator tessellator) {		if (PFLM_GuiOthersPlayerIndividualCustomizeSelect.playerList.size() <= i) return;		String s = PFLM_GuiOthersPlayerIndividualCustomizeSelect.playerList.get(i);		ownerGui.drawString(fontRenderer, s, j + 70, k + 8, 0xffffff);		boolean setting = PFLM_Main.playerLocalData.get(s) != null;		String s0 = setting ? "Setting" : "Non Settings";		ownerGui.drawString(fontRenderer, s0, j + 70, k + 17, 0xffffff);		if (setting) {			String t[] = (String[]) PFLM_Main.playerLocalData.get(s);			boolean flag = false;			if(t[4] != null) {				if (Integer.valueOf(t[4]) == PFLM_GuiOthersPlayerIndividualCustomize.modeOthersSettingOffline) {					setTextureValue(t[0], t[1], Integer.valueOf(t[2]));					setScale(Float.valueOf(t[3]));					PFLM_Main.pflm_RenderPlayerDummy.allModelInit(drawEntity, false);					float f5 = -((float)(width / 2) - i) + ((float)(j + 30) - i);					float f6 = -((float)(height / 2) - j) + ((float)((k + 30) - 10) - j);					drawMobModel2(mouseX, mouseY, j + 30, k + 30, (int)f5, (int)f6, 15F, 15F, true);					flag = true;				}			}			if (!flag) {				String s1 = PFLM_GuiOthersPlayerIndividualCustomize.getChangeModeString(Integer.valueOf(t[4]));				fontRenderer.drawString(s1.toString(), j + 10, k + 17, 0xffffff);			}		}	}	public void setTextureValue(String texture, String armorTexture, int color) {		PFLM_ModelData modelData = (PFLM_ModelData) PFLM_ModelDataMaster.instance.getPlayerData(drawEntity);		modelData.setCapsValue(modelData.caps_textureName, texture);		modelData.setCapsValue(modelData.caps_maidColor, color);		modelData.setCapsValue(modelData.caps_textureArmorName, armorTexture);		setTextureArmorPackege();		modelData.setCapsValue(modelData.caps_textureArmorName, armorTexture);		modelData.setCapsValue(modelData.caps_freeVariable, "showMainModel", true);		modelData.setCapsValue(modelData.caps_freeVariable, "initDrawEntityFlag", true);	}	public void setTextureArmorPackege() {		//modelData.setCapsValue(modelData.caps_textureArmorName, modelData.getCapsValue(modelData.caps_textureName));		PFLM_ModelData modelData = (PFLM_ModelData) PFLM_ModelDataMaster.instance.getPlayerData(drawEntity);		String s = PFLM_Main.getArmorName((String)modelData.getCapsValue(modelData.caps_textureArmorName), 2);		modelData.setCapsValue(modelData.caps_textureArmorName, s);	}	public void deletePlayerLocalData() {		if (PFLM_GuiOthersPlayerIndividualCustomizeSelect.playerList.size() < 1) return;		PFLM_Main.playerLocalData.remove(PFLM_GuiOthersPlayerIndividualCustomizeSelect.playerList.get(selected));		PFLM_Main.clearDataMap();	}	@Override	public String getTextureName() {		PFLM_ModelData modelData = (PFLM_ModelData) PFLM_ModelDataMaster.instance.getPlayerData(drawEntity);		return (String) modelData.getCapsValue(modelData.caps_textureName);	}	@Override	public void setTextureName(String s) {		PFLM_ModelData modelData = (PFLM_ModelData) PFLM_ModelDataMaster.instance.getPlayerData(drawEntity);		modelData.setCapsValue(modelData.caps_textureName, s);	}	@Override	public String getTextureArmorName() {		PFLM_ModelData modelData = (PFLM_ModelData) PFLM_ModelDataMaster.instance.getPlayerData(drawEntity);		return (String) modelData.getCapsValue(modelData.caps_textureArmorName);	}	@Override	public void setTextureArmorName(String s) {		PFLM_ModelData modelData = (PFLM_ModelData) PFLM_ModelDataMaster.instance.getPlayerData(drawEntity);		modelData.setCapsValue(modelData.caps_textureArmorName, s);	}	@Override	public int getColor() {		PFLM_ModelData modelData = (PFLM_ModelData) PFLM_ModelDataMaster.instance.getPlayerData(drawEntity);		return modelData.getCapsValueInt(modelData.caps_maidColor);	}	@Override	public void setColor(int i) {		PFLM_ModelData modelData = (PFLM_ModelData) PFLM_ModelDataMaster.instance.getPlayerData(drawEntity);		modelData.setCapsValue(modelData.caps_maidColor, i);	}	@Override	public float getScale() {		PFLM_ModelData modelData = (PFLM_ModelData) PFLM_ModelDataMaster.instance.getPlayerData(drawEntity);		return modelData.getCapsValueFloat(modelData.caps_modelScale);	}	@Override	public void setScale(float f) {		PFLM_ModelData modelData = (PFLM_ModelData) PFLM_ModelDataMaster.instance.getPlayerData(drawEntity);		modelData.setCapsValue(modelData.caps_modelScale, f);	}	@Override	public void modelChange() {	}	@Override	protected void drawGuiContainerBackgroundLayer(float f, int i, int j) {	}}