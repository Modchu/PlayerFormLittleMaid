package modchu.pflm;import java.util.HashMap;import modchu.lib.Modchu_AS;import modchu.lib.Modchu_IGuiSmallButton;import modchu.lib.Modchu_IGuiSmallButtonMaster;import modchu.lib.Modchu_Main;import modchu.lib.Modchu_Reflect;import org.lwjgl.input.Mouse;public class PFLM_GuiSmallButtonMaster implements Modchu_IGuiSmallButtonMaster {	public Object parentScreen;	public Modchu_IGuiSmallButton base;	public static boolean anyButtonClick = false;	public static boolean allButtonOutOfRangeClick = false;	private boolean allButtonOutOfRangeClickLock = false;	public boolean ContinuousClickLock = false;	public boolean buttonClick = false;	public boolean buttonClickTransmission = false;	private boolean ContinuousClickLockRelease = false;	public int width;	public int height;	public boolean enabled;	public int xPosition;	public int yPosition;	public boolean drawButton;	public String displayString;	public PFLM_GuiSmallButtonMaster(HashMap<String, Object> map) {		parentScreen = map.get("Object");		base = (Modchu_IGuiSmallButton) map.get("base");		displayString = (String) map.get("String");	}	public boolean mousePressed(Object par1Minecraft, int par2, int par3) {		if (ContinuousClickLock) {			ContinuousClickLockRelease = true;			//Modchu_Debug.dDebug("width="+width+" height="+height, 2);			//Modchu_Debug.dDebug("displayString="+displayString+" return=" + getButtonRange(par2, par3), 3);			//Modchu_Debug.mDebug("mousePressed displayString="+displayString+" yPosition="+(yPosition));			if (!buttonClick) {				buttonClick = getButtonRange(par2, par3);				if (!buttonClick						&& buttonClickTransmission) buttonClickTransmission = false;				return false;			}			return false;		}		return false;	}	public void drawButton(Object par1Minecraft, int par2, int par3) {		width = Modchu_AS.getInt(Modchu_AS.guiButtonWidth, base);		height = Modchu_AS.getInt(Modchu_AS.guiButtonHeight, base);		enabled = Modchu_AS.getBoolean(Modchu_AS.guiButtonEnabled, base);		xPosition = Modchu_AS.getInt(Modchu_AS.guiButtonXPosition, base);		yPosition = Modchu_AS.getInt(Modchu_AS.guiButtonYPosition, base);		drawButton = Modchu_AS.getBoolean(Modchu_AS.guiButtonVisible, base);		if (!ContinuousClickLock				&& Mouse.isButtonDown(0)) ContinuousClickLock = true;		if (ContinuousClickLockRelease				&& !Mouse.isButtonDown(0)) {			ContinuousClickLock = false;			ContinuousClickLockRelease = false;		}		if (Mouse.isButtonDown(0)) {			if (buttonClick) {				buttonClickTransmission = true;			}		}		if (buttonClickTransmission				&& !Mouse.isButtonDown(0)) {			int version = Modchu_Main.getMinecraftVersion();			Modchu_Reflect.setFieldObject("GuiScreen", version > 169 ? "field_146290_a" : "field_73883_a", "selectedButton", parentScreen, base);			buttonClickTransmission = false;			buttonClick = false;			if (getButtonRange(par2, par3)) {				Object mc = Modchu_AS.get(Modchu_AS.minecraftGetMinecraft);				if (mc != null) {					if (version > 169) {						Object mcSoundHandler = Modchu_Reflect.invokeMethod("Minecraft", "func_147118_V", "getSoundHandler", mc);						if (mcSoundHandler != null) Modchu_Reflect.invokeMethod("GuiButton", "func_146113_a", version > 179 ? "playPressSound" : "func_146113_a",new Class[]{ mcSoundHandler.getClass() }, base, new Object[]{ mcSoundHandler });					} else {						Object sndManager = Modchu_Reflect.getFieldObject("Minecraft", "field_71416_A", "sndManager", mc);						if (sndManager != null) Modchu_Reflect.invokeMethod(sndManager.getClass(), "func_77366_a", "playSoundFX", new Class[]{ String.class, float.class, float.class }, sndManager, new Object[]{ "random.click", 1.0F, 1.0F });					}					Modchu_Reflect.invokeMethod("GuiScreen", version > 169 ? "func_146284_a" : "func_73875_a", "actionPerformed", new Class[]{ Modchu_Reflect.loadClass("GuiButton") }, parentScreen, new Object[]{ base });				}			}		}		if (!anyButtonClick) {			anyButtonClick = Mouse.isButtonDown(0)					&& getButtonRange(par2, par3);			allButtonOutOfRangeClickLock = anyButtonClick && Mouse.isButtonDown(0);			if (allButtonOutOfRangeClick) {							} else {				allButtonOutOfRangeClick = !allButtonOutOfRangeClickLock						&& !anyButtonClick						&& Mouse.isButtonDown(0);			}			if (!Mouse.isButtonDown(0)) allButtonOutOfRangeClick = false;		} else {			anyButtonClick = Mouse.isButtonDown(0);			allButtonOutOfRangeClick = Mouse.isButtonDown(0);		}		if (Mouse.isButtonDown(1)				| Mouse.isButtonDown(2)) {			allButtonOutOfRangeClick = true;		}		//Modchu_Debug.dDebug("drawButton anyButtonClick=" + anyButtonClick);		//Modchu_Debug.dDebug("drawButton allButtonOutOfRangeClick=" + allButtonOutOfRangeClick, 1);		//if (displayString.equals("showArmor")) Modchu_Debug.dDebug("buttonClickTransmission="+buttonClickTransmission+" buttonClick="+buttonClick, 4);	}	public boolean getButtonRange() {		Object mc = Modchu_AS.get(Modchu_AS.minecraftGetMinecraft);		int i = Mouse.getEventX() * width / (Integer)Modchu_Reflect.getFieldObject("Minecraft", "field_71443_c", "displayWidth", mc);		int i2 = height - Mouse.getEventY() * height / (Integer)Modchu_Reflect.getFieldObject("Minecraft", "field_71440_d", "displayHeight", mc) - 1;		//Modchu_Debug.dDebug("getButtonRange i="+i+" i2="+i2, 5);		return getButtonRange(i, i2);	}	public boolean getButtonRange(int i, int i2) {		return enabled && drawButton && i >= xPosition && i2 >= yPosition && i < xPosition + width && i2 < yPosition + height;	}	@Override	public boolean getButtonClick() {		return buttonClick;	}	@Override	public void setButtonClick(boolean b) {		buttonClick = b;	}	@Override	public boolean getButtonClickTransmission() {		return buttonClickTransmission;	}	@Override	public void setButtonClickTransmission(boolean b) {		buttonClickTransmission = b;	}}