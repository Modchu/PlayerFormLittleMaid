package modchu.pflm;import modchu.lib.Modchu_IGuiPlayerSlotMaster;import modchu.lib.characteristic.Modchu_AS;import modchu.lib.characteristic.Modchu_GuiPlayerSlot;import modchu.lib.characteristic.recompileonly.Modchu_CastHelper;import modchu.lib.characteristic.recompileonly.Modchu_GuiBase;import modchu.lib.characteristic.recompileonly.Modchu_GuiModelView;public class PFLM_GuiOthersPlayerSlotMaster extends PFLM_GuiModelViewMaster implements Modchu_IGuiPlayerSlotMaster {	public Object base;	private int selected;	private int mouseX;	private int mouseY;	public PFLM_GuiOthersPlayerSlotMaster(Object par1Minecraft, int par2, int par3, int par4, int par5, int par6) {		this((Modchu_GuiPlayerSlot) null, (Modchu_GuiBase) null, null);	}	public PFLM_GuiOthersPlayerSlotMaster(Modchu_GuiPlayerSlot guiBase, Object par1GuiScreen, Object world, Object... o) {		super(null, par1GuiScreen, world, (Object[]) o);	}	@Override	public void init(Modchu_GuiBase guiBase, Object par1GuiScreen, Object world, Object... o) {		super.init(guiBase, par1GuiScreen, world, (Object[]) o);		base = guiBase;		selected = 0;		PFLM_ModelData modelData = (PFLM_ModelData) PFLM_ModelDataMaster.instance.getPlayerData(drawEntity);		showArmor = false;	}	public void selected(String textureName, String textureArmorName, int color, boolean armorMode) {		super.selected(textureName, textureArmorName, color, armorMode);		PFLM_ModelData modelData = (PFLM_ModelData) PFLM_ModelDataMaster.instance.getPlayerData(drawEntity);		modelData.setCapsValue(modelData.caps_freeVariable, "showMainModel", true);	}	public int getSize() {		return PFLM_GuiOthersPlayerIndividualCustomizeSelectMaster.playerList.size();	}	public int getContentHeight() {		return getSize() * 36;	}	public void elementClicked(int i, boolean flag) {		//flag = true 左ダブルクリック		selected = i;		String s = PFLM_GuiOthersPlayerIndividualCustomizeSelectMaster.playerList.get(i);		if (flag) openGuiCustomize();	}	public void openGuiCustomize() {		if (PFLM_GuiOthersPlayerIndividualCustomizeSelectMaster.playerList.size() < 1) return;		String s = PFLM_GuiOthersPlayerIndividualCustomizeSelectMaster.playerList.get(selected);		Modchu_GuiModelView gui = new Modchu_GuiModelView(PFLM_GuiOthersPlayerIndividualCustomizeMaster.class, parentScreen, popWorld, s);		Modchu_AS.set(Modchu_AS.minecraftDisplayGuiScreen, gui);		gui.setChangeMode(PFLM_GuiOthersPlayerIndividualCustomizeMaster.modeOffline);		String t[] = (String[]) PFLM_Main.playerLocalData.get(s);		if (t != null) {			gui.setTextureName(t[0]);			gui.setTextureArmorName(t[1]);			gui.setColor(Modchu_CastHelper.Int(t[2]));			gui.setScale(Modchu_CastHelper.Float(t[3]));			gui.setChangeMode(Modchu_CastHelper.Int(t[4]));		} else {			gui.setTextureName(null);			gui.setTextureArmorName(null);		}		gui.initGui();		reLoadModel(drawEntity, false);	}	public boolean isSelected(int i) {		if (PFLM_GuiOthersPlayerIndividualCustomizeSelectMaster.playerList.size() > i && i == selected) {			return true;		}		return false;	}	public void drawBackground() {	}	public boolean drawScreen(int i, int j, float f) {		mouseX = i;		mouseY = j;		drawGuiContainerBackgroundLayer(f, i, j);		return true;	}	public void drawSlot(int i, int j, int k, int l, Object tessellator, int m, int n) {		if (PFLM_GuiOthersPlayerIndividualCustomizeSelectMaster.playerList.size() <= i) {			//Modchu_Debug.mDebug("drawSlot playerList.size() <= i return.");			return;		}		String s = PFLM_GuiOthersPlayerIndividualCustomizeSelectMaster.playerList.get(i);		drawString(parentScreen, s, j + 70, k + 8, 0xffffff);		boolean setting = PFLM_Main.playerLocalData.get(s) != null;		String s0 = setting ? "Setting" : "Non Settings";		drawString(parentScreen, s0, j + 70, k + 17, 0xffffff);		int width = Modchu_AS.getInt(Modchu_AS.guiScreenWidth, parentScreen);		int height = Modchu_AS.getInt(Modchu_AS.guiScreenHeight, parentScreen);		if (setting) {			String t[] = (String[]) PFLM_Main.playerLocalData.get(s);			boolean flag = false;			if (t[4] != null) {				if (Modchu_CastHelper.Int(t[4]) == PFLM_GuiOthersPlayerIndividualCustomizeMaster.modeOffline) {					setTextureName(t[0]);					setTextureArmorName(t[1]);					setColor(Modchu_CastHelper.Int(t[2]));					setTextureValue();					setScale(Modchu_CastHelper.Float(t[3]));					drawEntitySetFlag = true;					textureResetFlag = true;					resetFlagCheck();					float f5 = -((float) (width / 2) - i) + ((float) (j + 30) - i);					float f6 = -((float) (height / 2) - j) + ((float) ((k + 30) - 10) - j);					drawMobModel(parentScreen, mouseX, mouseY, j + 30, k + 30, (int) f5, (int) f6, 15F, 15F, true);					flag = true;				}			}			if (!flag) {				String s1 = PFLM_GuiOthersPlayerIndividualCustomizeMaster.getChangeModeString(Modchu_CastHelper.Int(t[4]));				drawString(parentScreen, s1.toString(), j + 10, k + 17, 0xffffff);			}		}	}	public void setTextureArmorPackege() {		//modelData.setCapsValue(modelData.caps_textureArmorName, modelData.getCapsValue(modelData.caps_textureName));		PFLM_ModelData modelData = (PFLM_ModelData) PFLM_ModelDataMaster.instance.getPlayerData(drawEntity);		String s = PFLM_Main.getArmorName((String) modelData.getCapsValue(modelData.caps_textureArmorName), 2);		modelData.setCapsValue(modelData.caps_textureArmorName, s);	}	public void deletePlayerLocalData() {		if (PFLM_GuiOthersPlayerIndividualCustomizeSelectMaster.playerList.size() < 1) return;		PFLM_Main.playerLocalData.remove(PFLM_GuiOthersPlayerIndividualCustomizeSelectMaster.playerList.get(selected));		PFLM_Main.clearDataMap();	}	public String getTextureName() {		PFLM_ModelData modelData = (PFLM_ModelData) PFLM_ModelDataMaster.instance.getPlayerData(drawEntity);		return (String) modelData.getCapsValue(modelData.caps_textureName);	}	public void setTextureName(String s) {		PFLM_ModelData modelData = (PFLM_ModelData) PFLM_ModelDataMaster.instance.getPlayerData(drawEntity);		modelData.setCapsValue(modelData.caps_textureName, s);	}	public String getTextureArmorName() {		PFLM_ModelData modelData = (PFLM_ModelData) PFLM_ModelDataMaster.instance.getPlayerData(drawEntity);		return (String) modelData.getCapsValue(modelData.caps_textureArmorName);	}	public void setTextureArmorName(String s) {		PFLM_ModelData modelData = (PFLM_ModelData) PFLM_ModelDataMaster.instance.getPlayerData(drawEntity);		modelData.setCapsValue(modelData.caps_textureArmorName, s);	}	public int getColor() {		PFLM_ModelData modelData = (PFLM_ModelData) PFLM_ModelDataMaster.instance.getPlayerData(drawEntity);		return modelData.getCapsValueInt(modelData.caps_maidColor);	}	public void setColor(int i) {		PFLM_ModelData modelData = (PFLM_ModelData) PFLM_ModelDataMaster.instance.getPlayerData(drawEntity);		modelData.setCapsValue(modelData.caps_maidColor, i);	}	public float getScale() {		PFLM_ModelData modelData = (PFLM_ModelData) PFLM_ModelDataMaster.instance.getPlayerData(drawEntity);		return modelData.getCapsValueFloat(modelData.caps_modelScale);	}	public void setScale(float f) {		PFLM_ModelData modelData = (PFLM_ModelData) PFLM_ModelDataMaster.instance.getPlayerData(drawEntity);		modelData.setCapsValue(modelData.caps_modelScale, f);	}	public void modelChange() {		drawEntitySetFlag = true;	}	@Override	public void drawGuiContainerBackgroundLayer(float f, int i, int j) {	}}