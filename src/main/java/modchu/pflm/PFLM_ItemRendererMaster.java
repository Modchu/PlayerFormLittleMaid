package modchu.pflm;import java.util.HashMap;import modchu.lib.Modchu_AS;import modchu.lib.Modchu_IItemRendererMaster;import modchu.lib.Modchu_Main;import modchu.lib.Modchu_Reflect;import org.lwjgl.opengl.GL11;import org.lwjgl.opengl.GL12;public class PFLM_ItemRendererMaster implements Modchu_IItemRendererMaster {	public static Object base;	public static boolean flipHorizontal = false;	public static boolean leftHandedness = false;	public static boolean isOlddays = false;	public PFLM_ItemRendererMaster(HashMap<String, Object> map) {		base = map.get("base");		try {			Object o = Modchu_Reflect.getFieldObject("ItemRenderer", "olddays", -1);			if (o != null) isOlddays = true;		} catch (Exception e) {		}	}	public void renderItemInFirstPerson(float f, float equippedProgress, float prevEquippedProgress) {		renderItemInFirstPersonHand(f, equippedProgress, prevEquippedProgress);	}	private void renderItemInFirstPersonHand(float par1, float equippedProgress, float prevEquippedProgress) {		if (Modchu_Main.getMinecraftVersion() < 160) {			oldRenderItemInFirstPersonHand(par1, equippedProgress, prevEquippedProgress);			return;		}		GL11.glPushMatrix();		Object entityPlayer = Modchu_AS.get(Modchu_AS.minecraftThePlayer);		Object render;		Object renderPlayer;		Object textureManager = Modchu_AS.get(Modchu_AS.minecraftTextureManager);		float var2 = prevEquippedProgress + (equippedProgress - prevEquippedProgress) * par1;		float var14;		float var15;		float var16;		float var21;		float var13;		float swingProgress;		float var22;		if (leftHandedness) {			GL11.glRotatef(105.9F, 0.0F, 0.0F, 1.0F);			GL11.glRotatef(-46.9F, 0.0F, 1.0F, 0.0F);			GL11.glRotatef(-74.0F, 1.0F, 0.0F, 0.0F);			if (!PFLM_Main.oldRender) {				GL11.glTranslatef(-1.9F, 0.1F, 0.7F);			}/*			var21 = 0.8F;			var20 = var3.getSwingProgress(par1);			var22 = Modchu_AccessSupport.instance.mathHelperSin(var20 * (float)Math.PI);			var13 = Modchu_AccessSupport.instance.mathHelperSin(Modchu_AccessSupport.instance.mathHelperSqrt_float(var20) * (float)Math.PI);			float x = -var11 * 0.3F;			float y = Modchu_AccessSupport.instance.mathHelperSin(Modchu_AccessSupport.instance.mathHelperSqrt_float(var13) * (float)Math.PI * 2.0F) * 0.4F;			float z = -var12 * 0.4F;			GL11.glTranslatef(-x, y, z);			x = 0.8F * var6;			y = -0.75F * var6 - (1.0F - var2) * 0.6F;			z = -0.9F * var6;			GL11.glTranslatef(-x, y, z);			GL11.glRotatef(-45.0F, 0.0F, 1.0F, 0.0F);			GL11.glRotatef(0.0F, 0.0F, 0.0F, 1.0F);			GL11.glRotatef(-90.0F, 1.0F, 0.0F, 0.0F);			GL11.glEnable(GL12.GL_RESCALE_NORMAL);			var20 = -var3.getSwingProgress(par1);			var22 = Modchu_AccessSupport.instance.mathHelperSin(var20 * var20 * (float)Math.PI);			var13 = Modchu_AccessSupport.instance.mathHelperSin(Modchu_AccessSupport.instance.mathHelperSqrt_float(var20) * (float)Math.PI);			GL11.glRotatef(-var11 * 70.0F, 0.0F, 1.0F, 0.0F);			GL11.glRotatef(var12 * 20.0F, 0.0F, 0.0F, 1.0F);			Modchu_Reflect.invokeMethod("TextureManager", "func_110577_a", new Class[]{ Modchu_Reflect.loadClass("ResourceLocation") }, textureManager, new Object[]{ Modchu_Reflect.invokeMethod("AbstractClientPlayer", "func_110306_p", var3) });			//mc.func_110434_K().func_110577_a(var3.func_110306_p());			GL11.glTranslatef(1.0F, 3.6F, 3.5F);			GL11.glRotatef(-120.0F, 0.0F, 0.0F, 1.0F);			GL11.glRotatef(-200.0F, 1.0F, 0.0F, 0.0F);			GL11.glRotatef(135.0F, 0.0F, 1.0F, 0.0F);			GL11.glScalef(1.0F, 1.0F, 1.0F);			GL11.glTranslatef(-4.8F, -2.4F, 0.5F);			//GL11.glTranslatef(4.8F, 0.5F, 0.0F);			//if (!PFLM_Main.oldRender) GL11.glRotatef(180F, 1.0F, 0.0F, 0.0F);*/			render = Modchu_AS.get(Modchu_AS.renderManagerGetEntityRenderObject, entityPlayer);			var16 = 1.0F;			GL11.glScalef(var16, var16, var16);		} else {			var21 = 0.8F;			swingProgress = Modchu_AS.getFloat(Modchu_AS.entityLivingBaseGetSwingProgress, par1);			//Modchu_Debug.mDebug("swingProgress="+swingProgress);			var22 = Modchu_AS.getFloat(Modchu_AS.mathHelperSin, swingProgress * (float) Math.PI);			var13 = Modchu_AS.getFloat(Modchu_AS.mathHelperSin, Modchu_AS.getFloat(Modchu_AS.mathHelperSqrt_float, swingProgress) * (float) Math.PI);			GL11.glTranslatef(-var13 * 0.3F, Modchu_AS.getFloat(Modchu_AS.mathHelperSin, Modchu_AS.getFloat(Modchu_AS.mathHelperSqrt_float, swingProgress) * (float) Math.PI * 2.0F) * 0.4F, -var22 * 0.4F);			GL11.glTranslatef(0.8F * var21, -0.75F * var21 - (2.0F - var2) * 0.6F, -0.9F * var21);			GL11.glRotatef(45.0F, 0.0F, 1.0F, 0.0F);			GL11.glEnable(GL12.GL_RESCALE_NORMAL);			var22 = Modchu_AS.getFloat(Modchu_AS.mathHelperSin, swingProgress * swingProgress * (float) Math.PI);			var13 = Modchu_AS.getFloat(Modchu_AS.mathHelperSin, Modchu_AS.getFloat(Modchu_AS.mathHelperSqrt_float, swingProgress) * (float) Math.PI);			GL11.glRotatef(var13 * 70.0F, 0.0F, 1.0F, 0.0F);			GL11.glRotatef(-var22 * 20.0F, 0.0F, 0.0F, 1.0F);			Modchu_AS.set(Modchu_AS.textureManagerBindTexture, textureManager, Modchu_AS.get(Modchu_AS.abstractClientPlayerLocationSkin, entityPlayer));			//mc.func_110434_K().func_110577_a(var3.func_110306_p());			GL11.glTranslatef(-1.0F, 3.6F, 3.5F);			GL11.glRotatef(120.0F, 0.0F, 0.0F, 1.0F);			GL11.glRotatef(200.0F, 1.0F, 0.0F, 0.0F);			GL11.glRotatef(-135.0F, 0.0F, 1.0F, 0.0F);			GL11.glScalef(1.0F, 1.0F, 1.0F);			GL11.glTranslatef(5.52F, 0.6F, 0.0F);			render = Modchu_AS.get(Modchu_AS.renderManagerGetEntityRenderObject, entityPlayer);			var16 = 1.0F;			GL11.glScalef(var16, var16, var16);		}		if (Modchu_Reflect.loadClass("RenderPlayer").isInstance(render)) Modchu_AS.set(Modchu_AS.renderFirstPersonArm, render, entityPlayer);		else Modchu_Reflect.invokeMethod(render.getClass(), "renderFirstPersonArm", new Class[]{ Object.class }, render, new Object[]{ entityPlayer });		GL11.glPopMatrix();	}	private void oldRenderItemInFirstPersonHand(float par1, float equippedProgress, float prevEquippedProgress) {		Object entityPlayer = Modchu_AS.get(Modchu_AS.minecraftThePlayer);		float var2 = prevEquippedProgress + (equippedProgress - prevEquippedProgress) * par1;		float var4 = Modchu_AS.getFloat(Modchu_AS.entityPrevRotationPitch, entityPlayer) + (Modchu_AS.getFloat(Modchu_AS.entityRotationPitch, entityPlayer) - Modchu_AS.getFloat(Modchu_AS.entityPrevRotationPitch, entityPlayer)) * par1;		float var5;		float var6;		float var11;		float var12;		float swingProgress;		float var14;		float var15;		Object render;		float var16;		GL11.glPushMatrix();		if (leftHandedness) {			//GL11.glRotatef(Modchu_Debug.debaf1, 0.0F, 0.0F, 1.0F);			//GL11.glRotatef(Modchu_Debug.debaf2, 0.0F, 1.0F, 0.0F);			//GL11.glRotatef(Modchu_Debug.debaf3, 1.0F, 0.0F, 0.0F);			GL11.glRotatef(105.9F, 0.0F, 0.0F, 1.0F);			GL11.glRotatef(-46.9F, 0.0F, 1.0F, 0.0F);			GL11.glRotatef(-74.0F, 1.0F, 0.0F, 0.0F);			//Modchu_Debug.debaf1 = 105.9F;			//Modchu_Debug.debaf2 = -46.9F;			//Modchu_Debug.debaf3 = -74.0F;			//Modchu_Debug.debaf4 = -1.4F;			//Modchu_Debug.debaf5 = 0.1F;			//Modchu_Debug.debaf6 = 0.7F;			//Modchu_Debug.dDebug("debaf1="+Modchu_Debug.debaf1+" 2="+Modchu_Debug.debaf2+" 3="+Modchu_Debug.debaf3);			//Modchu_Debug.dDebug("debaf4="+Modchu_Debug.debaf4+" 5="+Modchu_Debug.debaf5+" 6="+Modchu_Debug.debaf6, 1);			if (!PFLM_Main.oldRender) {				//GL11.glTranslatef(Modchu_Debug.debaf4, Modchu_Debug.debaf5, Modchu_Debug.debaf6);				GL11.glTranslatef(-1.4F, 0.1F, 0.7F);			}/*			var6 = 0.8F;			//var13 = 0.5F;			var13 = var3.getSwingProgress(par1);			var12 = Modchu_AccessSupport.instance.mathHelperSin(var13 * (float)Math.PI);			var11 = Modchu_AccessSupport.instance.mathHelperSin(Modchu_AccessSupport.instance.mathHelperSqrt_float(var13) * (float)Math.PI);			float x = -var11 * 0.7F;			float y = Modchu_AccessSupport.instance.mathHelperSin(Modchu_AccessSupport.instance.mathHelperSqrt_float(var13) * (float)Math.PI * 2.0F) * 0.4F;			float z = -var12 * 0.4F;			//GL11.glTranslatef(-x, y, z);			GL11.glTranslatef(0F, 0F, z);			x = 0.8F * var6;			y = -0.75F * var6 - (1.0F - var2) * 0.6F;			z = -0.9F * var6;			GL11.glTranslatef(-x, y, z);			GL11.glRotatef(-45.0F, 0.0F, 1.0F, 0.0F);			GL11.glRotatef(0.0F, 0.0F, 0.0F, 1.0F);			GL11.glRotatef(-90.0F, 1.0F, 0.0F, 0.0F);			GL11.glEnable(GL12.GL_RESCALE_NORMAL);			var13 = -var3.getSwingProgress(par1);			var12 = Modchu_AccessSupport.instance.mathHelperSin(var13 * var13 * (float)Math.PI);			var11 = Modchu_AccessSupport.instance.mathHelperSin(Modchu_AccessSupport.instance.mathHelperSqrt_float(var13) * (float)Math.PI);			GL11.glRotatef(-var11 * 70.0F, 0.0F, 1.0F, 0.0F);			GL11.glRotatef(var12 * 20.0F, 0.0F, 0.0F, 1.0F);			Object renderEngine = Modchu_Reflect.getFieldObject("Minecraft", "field_71446_o", "renderEngine", Modchu_Main.getMinecraft());			EntityPlayer thePlayer = Modchu_AccessSupport.instance.minecraftThePlayerO();			int i = (Integer) Modchu_Reflect.invokeMethod("RenderEngine", "func_78350_a", "getTextureForDownloadableImage", new Class[]{ String.class, String.class }, renderEngine, new Object[]{ Modchu_Reflect.getFieldObject(Entity.class, "field_70120_cr", "skinUrl", thePlayer), Modchu_Reflect.invokeMethod(EntityLiving.class, "func_70073_O", "getTexture", thePlayer) });			GL11.glBindTexture(GL11.GL_TEXTURE_2D, i);			GL11.glTranslatef(-1.0F, 3.6F, 3.5F);			GL11.glRotatef(-120.0F, 0.0F, 0.0F, 1.0F);			GL11.glRotatef(-200.0F, 1.0F, 0.0F, 0.0F);			GL11.glRotatef(135.0F, 0.0F, 1.0F, 0.0F);			GL11.glScalef(1.0F, 1.0F, 1.0F);			GL11.glTranslatef(-4.8F, -2.9F, 0.5F);*/			render = Modchu_AS.get(Modchu_AS.renderManagerGetEntityRenderObject, entityPlayer);			var16 = 1.0F;			GL11.glScalef(var16, var16, var16);		} else {			if (!PFLM_Main.oldRender) GL11.glTranslatef(0.0F, 0.6F, 0.0F);			var6 = 0.8F;			swingProgress = Modchu_AS.getFloat(Modchu_AS.entityLivingBaseGetSwingProgress, par1);			//Modchu_Debug.mDebug("swingProgress="+swingProgress);			var12 = Modchu_AS.getFloat(Modchu_AS.mathHelperSin, swingProgress * (float) Math.PI);			var11 = Modchu_AS.getFloat(Modchu_AS.mathHelperSin, Modchu_AS.getFloat(Modchu_AS.mathHelperSqrt_float, swingProgress) * (float) Math.PI);			GL11.glTranslatef(-var11 * 0.3F, Modchu_AS.getFloat(Modchu_AS.mathHelperSin, Modchu_AS.getFloat(Modchu_AS.mathHelperSqrt_float, swingProgress) * (float) Math.PI * 2.0F) * 0.4F, -var12 * 0.4F);			GL11.glTranslatef(0.8F * var6, -0.75F * var6 - (1.0F - var2) * 0.6F, -0.9F * var6);			GL11.glRotatef(45.0F, 0.0F, 1.0F, 0.0F);			GL11.glEnable(GL12.GL_RESCALE_NORMAL);			var12 = Modchu_AS.getFloat(Modchu_AS.mathHelperSin, swingProgress * swingProgress * (float) Math.PI);			var11 = Modchu_AS.getFloat(Modchu_AS.mathHelperSin, Modchu_AS.getFloat(Modchu_AS.mathHelperSqrt_float, swingProgress) * (float) Math.PI);			GL11.glRotatef(var11 * 70.0F, 0.0F, 1.0F, 0.0F);			GL11.glRotatef(-var12 * 20.0F, 0.0F, 0.0F, 1.0F);			Object renderEngine = Modchu_Reflect.getFieldObject("Minecraft", "field_71446_o", "renderEngine", Modchu_AS.get(Modchu_AS.minecraftGetMinecraft));			int i = (Integer) Modchu_Reflect.invokeMethod("RenderEngine", "func_78350_a", "getTextureForDownloadableImage", new Class[]{ String.class, String.class }, renderEngine, new Object[]{ Modchu_Reflect.getFieldObject("Entity", "field_70120_cr", "skinUrl", entityPlayer), Modchu_Reflect.invokeMethod("EntityLivingBase", "func_70073_O", "getTexture", entityPlayer) });			GL11.glTranslatef(-1.0F, 3.6F, 3.5F);			GL11.glRotatef(120.0F, 0.0F, 0.0F, 1.0F);			GL11.glRotatef(200.0F, 1.0F, 0.0F, 0.0F);			GL11.glRotatef(-135.0F, 0.0F, 1.0F, 0.0F);			GL11.glScalef(1.0F, 1.0F, 1.0F);			GL11.glTranslatef(5.6F, 0.0F, 0.0F);			render = Modchu_AS.get(Modchu_AS.renderManagerGetEntityRenderObject, entityPlayer);			var16 = 1.0F;			GL11.glScalef(var16, var16, var16);		}		if (Modchu_Reflect.loadClass("RenderPlayer").isInstance(render)) Modchu_AS.set(Modchu_AS.renderFirstPersonArm, render, entityPlayer);		else Modchu_Reflect.invokeMethod(render.getClass(), "renderFirstPersonArm", new Class[]{ Modchu_Reflect.loadClass("Entity") }, render, new Object[]{ entityPlayer });		GL11.glPopMatrix();	}	public boolean getFlipHorizontal() {		return flipHorizontal;	}	public void setFlipHorizontal(boolean b) {		flipHorizontal = b;	}	public void drawFirstPersonHand(Object render, int h) {		//Modchu_Debug.Debug("drawFirstPersonHand h="+h);		//olddays用		boolean b = false;		if (isOlddays) b = (Boolean) Modchu_Reflect.getFieldObject("ItemRenderer", "olddays");		Object entityPlayer = Modchu_AS.get(Modchu_AS.minecraftThePlayer);		if (!b) {			//Modchu_Debug.Debug("drawFirstPersonHand b!");			if (Modchu_Reflect.loadClass("RenderPlayer").isInstance(render)) Modchu_AS.get(Modchu_AS.renderFirstPersonArm, render, entityPlayer);			else Modchu_Reflect.invokeMethod(render.getClass(), "renderFirstPersonArm", new Class[]{ Modchu_Reflect.loadClass("Entity") }, render, new Object[]{ entityPlayer });			return;		}		Modchu_Reflect.invokeMethod(render.getClass(), "func_82441_a", "renderFirstPersonArm", new Class[]{ Modchu_Reflect.loadClass("EntityPlayer"), int.class }, render, new Object[]{ entityPlayer, h });		return;	}}